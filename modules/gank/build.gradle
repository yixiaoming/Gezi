if (isModule.toBoolean()) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }

    testOptions {
        unitTests.includeAndroidResources = true
        unitTests.returnDefaultValues = true
    }

    sourceSets {
        main {
            if (isModule.toBoolean()) {
                manifest.srcFile 'src/module/AndroidManifest.xml'
                java.srcDirs("src/main/java", "src/module/java")
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(":lib_data")
    implementation project(":common:lib_mvvm")
    implementation project(":common:lib_log")
    implementation project(":common:lib_glide")
    implementation project(":common:lib_player")

    implementation common.design

    implementation common.lifecycle
    annotationProcessor common.lifecycleProcessor

    implementation common.retrofit
    implementation common.retrofitJson
    implementation common.retrofitRxjava

    implementation common.rxJava
    implementation common.rxAndroid
}